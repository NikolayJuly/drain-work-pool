{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/DynamicAsyncWorkPoolDrainer\/AsyncIterator","preciseIdentifier":"s:15WorkPoolDraning012DynamicAsyncaB7DrainerC0E8Iteratora","text":"AsyncIterator"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/workpooldraning\/dynamicasyncworkpooldrainer\/makeasynciterator()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/DynamicAsyncWorkPoolDrainer\/makeAsyncIterator()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"AsyncSequence.makeAsyncIterator()"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsyncIterator","preciseIdentifier":"s:15WorkPoolDraning012DynamicAsyncaB7DrainerC0E8Iteratora"}],"title":"makeAsyncIterator()","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:15WorkPoolDraning012DynamicAsyncaB7DrainerC04makeE8IteratorAA0efH0VyxGyF","modules":[{"name":"WorkPoolDraning"}]},"hierarchy":{"paths":[["doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning","doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/DynamicAsyncWorkPoolDrainer"]]},"references":{"doc://WorkPoolDraning/documentation/WorkPoolDraning/DynamicAsyncWorkPoolDrainer/AsyncIterator":{"role":"symbol","title":"DynamicAsyncWorkPoolDrainer.AsyncIterator","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"abstract":[],"identifier":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/DynamicAsyncWorkPoolDrainer\/AsyncIterator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"url":"\/documentation\/workpooldraning\/dynamicasyncworkpooldrainer\/asynciterator"},"doc://WorkPoolDraning/documentation/WorkPoolDraning/DynamicAsyncWorkPoolDrainer/makeAsyncIterator()":{"role":"symbol","title":"makeAsyncIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsyncIterator","preciseIdentifier":"s:15WorkPoolDraning012DynamicAsyncaB7DrainerC0E8Iteratora"}],"abstract":[],"identifier":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/DynamicAsyncWorkPoolDrainer\/makeAsyncIterator()","kind":"symbol","type":"topic","url":"\/documentation\/workpooldraning\/dynamicasyncworkpooldrainer\/makeasynciterator()"},"doc://WorkPoolDraning/documentation/WorkPoolDraning":{"role":"collection","title":"WorkPoolDraning","abstract":[{"type":"text","text":"This package aim to help with execute big amount of tasks, but limit number of simultaneously executed tasks."}],"identifier":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning","kind":"symbol","type":"topic","url":"\/documentation\/workpooldraning"},"doc://WorkPoolDraning/documentation/WorkPoolDraning/DynamicAsyncWorkPoolDrainer":{"role":"symbol","title":"DynamicAsyncWorkPoolDrainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicAsyncWorkPoolDrainer"}],"abstract":[{"type":"text","text":"Drain dynamicly sized pool of work, limiting number of simultanious executions"}],"identifier":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/DynamicAsyncWorkPoolDrainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicAsyncWorkPoolDrainer"}],"url":"\/documentation\/workpooldraning\/dynamicasyncworkpooldrainer"}}}