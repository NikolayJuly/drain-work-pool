{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning","doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/DynamicAsyncWorkPoolDrainer"]]},"identifier":{"url":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/DynamicAsyncWorkPoolDrainer\/cancel()","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cancel","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Nothing happens if work pool is static and draining completed."}],"type":"paragraph"},{"inlineContent":[{"text":"In case of dynamic work pool, no new tasks can be added after that and no new tasks will be executer.","type":"text"},{"text":" ","type":"text"},{"text":"Currently running tasks will continue running, but their result will be ignored.","type":"text"}],"type":"paragraph"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"if drainer was stopped, iterators will throw ","type":"text"},{"isActive":true,"identifier":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/WorkPoolDrainerError\/cancelled","type":"reference"}]}],"name":"Note"}],"kind":"content"}],"abstract":[{"text":"Cancel drain.","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/workpooldraning\/dynamicasyncworkpooldrainer\/cancel()"]}],"metadata":{"role":"symbol","modules":[{"name":"WorkPoolDraning"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:15WorkPoolDraning012DynamicAsyncaB7DrainerC6cancelyyF","title":"cancel()","roleHeading":"Instance Method"},"references":{"doc://WorkPoolDraning/documentation/WorkPoolDraning/WorkPoolDrainerError/cancelled":{"identifier":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/WorkPoolDrainerError\/cancelled","url":"\/documentation\/workpooldraning\/workpooldrainererror\/cancelled","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"cancelled","kind":"identifier"}],"type":"topic","abstract":[],"title":"WorkPoolDrainerError.cancelled","role":"symbol"},"doc://WorkPoolDraning/documentation/WorkPoolDraning/DynamicAsyncWorkPoolDrainer":{"title":"DynamicAsyncWorkPoolDrainer","kind":"symbol","identifier":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/DynamicAsyncWorkPoolDrainer","abstract":[{"type":"text","text":"Drain dynamically sized pool of work, limiting number of simultaneous executions"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicAsyncWorkPoolDrainer"}],"url":"\/documentation\/workpooldraning\/dynamicasyncworkpooldrainer","navigatorTitle":[{"kind":"identifier","text":"DynamicAsyncWorkPoolDrainer"}],"role":"symbol"},"doc://WorkPoolDraning/documentation/WorkPoolDraning":{"url":"\/documentation\/workpooldraning","type":"topic","kind":"symbol","title":"WorkPoolDraning","identifier":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning","role":"collection","abstract":[{"type":"text","text":"This package aim to help with execution of big amount of tasks, but limit number of simultaneously executed tasks."}]},"doc://WorkPoolDraning/documentation/WorkPoolDraning/DynamicAsyncWorkPoolDrainer/cancel()":{"url":"\/documentation\/workpooldraning\/dynamicasyncworkpooldrainer\/cancel()","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cancel"},{"text":"()","kind":"text"}],"kind":"symbol","abstract":[{"text":"Cancel drain.","type":"text"}],"title":"cancel()","identifier":"doc:\/\/WorkPoolDraning\/documentation\/WorkPoolDraning\/DynamicAsyncWorkPoolDrainer\/cancel()"}}}